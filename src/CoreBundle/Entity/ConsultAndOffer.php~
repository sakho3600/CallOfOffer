<?php

namespace CoreBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * ConsultAndOffer
 *
 * @ORM\Table(name="consult_and_offer")
 * @ORM\Entity(repositoryClass="CoreBundle\Repository\ConsultAndOfferRepository")
 */
class ConsultAndOffer
{
    /**
     * @ORM\Id
     * @ORM\ManyToOne(targetEntity="CoreBundle\Entity\Provider", inversedBy="consultAndOffer")
     * @ORM\JoinColumn(name="provider_id", referencedColumnName="id")
     */
    private $provider;

    /**
     * @ORM\Id
     * @ORM\ManyToOne(targetEntity="CoreBundle\Entity\CallOfOffer", inversedBy="consultAndOffer")
     * @ORM\JoinColumn(name="call_of_offer_id", referencedColumnName="id")
     */
    private $callOfOffer;


    /**
     * @var float
     *
     * @ORM\Column(name="price", type="decimal", precision=10, scale=2)
     */
    private $price;

    /**
     * @var string
     *
     * @ORM\Column(name="comment", type="text")
     */
    private $comment;



    /**
     * Set price
     *
     * @param string $price
     *
     * @return ConsultAndOffer
     */
    public function setPrice($price)
    {
        $this->price = $price;

        return $this;
    }

    /**
     * Get price
     *
     * @return string
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * Set provider
     *
     * @param integer $provider
     *
     * @return ConsultAndOffer
     */
    public function setProvider($provider)
    {
        $this->provider = $provider;

        return $this;
    }

    /**
     * Get provider
     *
     * @return integer
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * Set callOfOffer
     *
     * @param integer $callOfOffer
     *
     * @return ConsultAndOffer
     */
    public function setCallOfOffer($callOfOffer)
    {
        $this->callOfOffer = $callOfOffer;

        return $this;
    }

    /**
     * Get callOfOffer
     *
     * @return integer
     */
    public function getCallOfOffer()
    {
        return $this->callOfOffer;
    }
}
