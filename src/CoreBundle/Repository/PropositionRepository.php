<?php

namespace CoreBundle\Repository;

/**
 * PropositionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropositionRepository extends \Doctrine\ORM\EntityRepository
{

    public function getByCooAndUser($idCoo, $idProvider)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM  CoreBundle:Proposition p WHERE p.provider = :idProvider AND p.callOfOffer = :idCoo')
            ->setParameter('idProvider', $idProvider)
            ->setParameter('idCoo', $idCoo)
            ->getSingleResult();
    }

    public function getCooByPropositionId($idProp)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM  CoreBundle:Proposition p, CoreBundle:CallOfOffer c WHERE p.id = :idProp AND c.id = p.callOfOffer')
            ->setParameter('idProp', $idProp)
            ->getSingleResult();
    }


    public function getProviderByPropositionId($idProp)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT pr FROM  CoreBundle:Proposition p, CoreBundle:Provider pr WHERE p.provider = :idProp AND pr.id = p.provider')
            ->setParameter('idProp', $idProp)
            ->getSingleResult();
    }

    public function getAllPropositionByProviderId($idProvider)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM CoreBundle:Proposition p WHERE p.provider = :idProv')
            ->setParameter('idProv', $idProvider)
            ->getResult();
    }

    public function getAllPropositionByProviderIdIsAccepted($idProvider)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM CoreBundle:Proposition p WHERE p.provider = :idProv AND p.isAccepted = TRUE')
            ->setParameter('idProv', $idProvider)
            ->getResult();
    }

    public function getAllPropositionByProviderIdIsRefused($idProvider)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM CoreBundle:Proposition p WHERE p.provider = :idProv AND p.isRefused = TRUE')
            ->setParameter('idProv', $idProvider)
            ->getResult();
    }

    public function getAllPropositionByProviderIdInWaiting($idProvider)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM CoreBundle:Proposition p WHERE p.id = :idProv AND p.isAccepted = FALSE AND p.isRefused = FALSE')
            ->setParameter('idProv', $idProvider)
            ->getResult();
    }

    public function getAllPropositionByCooId($idCoo)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT p FROM CoreBundle:Proposition p, CoreBundle:CallOfOffer c WHERE c.id = :idCoo')
            ->setParameter('idCoo', $idCoo)
            ->getResult();
    }

}
